#!/usr/bin/perl
#
#
#Copyright (c) 1995,1996 The Regents of the University of California.
#All rights reserved.
#
#Permission to use, copy, modify, and distribute this software
#for any purpose, without fee, and without written agreement is
#hereby granted, provided that the above copyright notice and the following
#two paragraphs appear in all copies of this software.
#
#IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
#DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
#OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF
#CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
#INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
#AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
#ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO
#PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
#

$base_dir = "./BASE_cgtest";
stat($base_dir);
die("Did the base dir move?\n") unless -d _;

$result_dir = "./RESULTS_cgtest";
stat($result_dir);
system("echo \"Creating results directory\"; mkdir -p ./RESULTS_cgtest") 
    unless -d _;

$cgtest = "../src/coolc-test";
#$cgtest = "../src/coolc";
stat($cgtest);
die("The program coolc-test isn't available.\n") unless -x _;
$cgtest_options = $ENV{'CG_OPTIONS'};;
print "Compiling using $cgtest $cgtest_options\n";

$spim = "../bin/spim";
stat($spim);
die("spim isn't available ?\n") unless -x _;

$trap = "../lib/trap.handler";
stat($trap);
die("trap.handler isn't available ?\n") unless -r _;

$test_success = 1;
&test();

# print "view compiled code differences  [Yn] ";
# $_ = <STDIN>; chop;
&compare_compiled();
#unless ($_ eq "n" || $_ eq "N");

# print "view executed code differences  [Yn] ";
# $_ = <STDIN>; chop;
&compare_executed();	
#unless ($_ eq "n" || $_ eq "N");

if ($test_success)
{ system "echo 'Code generation test succeeded.'"; }
else
{ system "echo 'Code generation test failed.'"; }
exit(0);

sub test {

    system "rm -f $result_dir/*.*";

    opendir(DIR,$base_dir) || die "Can't open $base_dir";
    local(@test_files) = grep(/\.cl$/, readdir(DIR));
    closedir(DIR);

    # create new test results
    for (@test_files) {
    	system "echo 'compiling test $_'";
	system "$cgtest $cgtest_options -o $result_dir/$_.s $base_dir/$_ > $result_dir/$_.result 2> $result_dir/$_.stderr";
    }

    opendir(DIR,$result_dir) || die "Can't open $base_dir";
    @test_files = grep(/\.s$/, readdir(DIR));
    closedir(DIR);

    # create new test results
    for (@test_files) {
    	system "echo 'running test $_'";
	system "$spim -trap_file $trap -file $result_dir/$_ "
	      ."  > $result_dir/$_.result.pre 2> $result_dir/$_.stderr";
	open FILE_PRE, "$result_dir/$_.result.pre" or die $!;

	my $contents;
	{
	    undef $/;
	    $contents = <FILE_PRE>;
	}
	# Ignore certain stuff that we don't care about:
	$contents =~ s/^SPIM Version.*\n//mg;    #depends on spim version
	$contents =~ s/^.*James R. Larus.*\n//mg;#depends on spim version
	$contents =~ s/^See the file README.*\n//mg;#depends on spim version
	$contents =~ s/^Loaded.*trap.handler\n//mg; #depends on installation
	$contents =~ s/Minor \.\.\.\n//mg;         #Garbage collection stuff
	$contents =~ s/Major \.\.\.\n//mg;         #         "
	$contents =~ s/Garbage collecting \.\.\.\n//mg;#     "
	$contents =~ s/Increasing heap\.\.\.\n//mg;#         "

	open FILE, ">$result_dir/$_.result" or die $!;
	print FILE $contents;

	close FILE_PRE or die $!;
	close FILE or die $!;

# 	system ("grep -v \"trap.handler\" $result_dir/$_.result.pre "
# 	       ." | grep -v \"Minor \.\.\.\"                        "
# 	       ." | grep -v \"Major \.\.\.\"                        "
# 	       ." | grep -v \"Garbage collecting \.\.\.\"           "
# 	       ." | grep -v \"Increasing heap\.\.\.\"               "
# 	       ." | grep -v \"See the file README\"                 "
# 	       ." | grep -v \"SPIM Version\"                        "
# 	       ." | grep -v \"James R. Larus\" > $result_dir/$_.result");
    }

}

sub compare_compiled {

     opendir(DIR,$base_dir) || die "Can't open $base_dir";
     local(@spim_files) = grep(/\.s$/, readdir(DIR));
     closedir(DIR);

    # compare results
    for (sort(@spim_files)) {
	if (system "diff -b -w $result_dir/$_ $base_dir/$_> /dev/null")
	{
#	    $test_success = 0;
#	    system "echo '############## diff -b -w for '$_'  ##############'";
#	    system "diff -b -w $result_dir/$_ $base_dir/$_";
	    system "echo \" ($_ is different)\"";
	}
    }

    opendir(DIR,$base_dir) || die "Can't open $base_dir";
    local(@result_files) = grep(/\.cl\.result$/, readdir(DIR));
    closedir(DIR);

    # compare results
    for (sort(@result_files)) {
	if (system "diff -b -w $result_dir/$_ $base_dir/$_> /dev/null")
	{
	    $test_success = 0;
	    system "echo '############### diff -b -w for '$_'  ###############'";
	    system "diff -b -w $result_dir/$_ $base_dir/$_";
	}
    }

    opendir(DIR,$base_dir) || die "Can't open $base_dir";
    local(@stderr_files) = grep(/\.cl\.stderr$/, readdir(DIR));
    closedir(DIR);

    # compare results
    for (sort(@stderr_files)) {
	if (system "diff -b -w $result_dir/$_ $base_dir/$_> /dev/null")
	{
	    $test_success = 0;
	    system "echo '############### diff -b -w for '$_'  ###############'";
	    system "diff -b -w $result_dir/$_ $base_dir/$_";
	}
    }

}

sub compare_executed {

    opendir(DIR,$base_dir) || die "Can't open $base_dir";
    local(@result_files) = grep(/\.s\.result$/, readdir(DIR));
    closedir(DIR);

    # compare results
    for (sort(@result_files)) {
	if (system "diff -b -w $result_dir/$_ $base_dir/$_> /dev/null")
	{
	    $test_success = 0;
	    system "echo '############### diff -b -w for '$_'  ###############'";
	    system "diff -b -w $result_dir/$_ $base_dir/$_";
	}
    }

    opendir(DIR,$base_dir) || die "Can't open $base_dir";
    local(@stderr_files) = grep(/\.s\.stderr$/, readdir(DIR));
    closedir(DIR);

    # compare results
    for (sort(@stderr_files)) {
	if (system "diff -b -w $result_dir/$_ $base_dir/$_> /dev/null")
	{
	    $test_success = 0;
	    system "echo '############### diff -b -w for '$_'  ###############'";
	    system "diff -b -w $result_dir/$_ $base_dir/$_";
        }
    }

}


